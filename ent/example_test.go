// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"
	"log"

	"github.com/facebookincubator/ent/dialect/sql"
)

// dsn for the database. In order to run the tests locally, run the following command:
//
//	 ENT_INTEGRATION_ENDPOINT="root:pass@tcp(localhost:3306)/test?parseTime=True" go test -v
//
var dsn string

func ExampleMeetups() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the meetups's edges.
	u0 := client.Users.
		Create().
		SetUsername("string").
		SetEmail("string").
		SaveX(ctx)
	log.Println("users created:", u0)

	// create meetups vertex with its edges.
	m := client.Meetups.
		Create().
		SetName("string").
		SetDescription("string").
		SetUsersID(1).
		AddUser(u0).
		SaveX(ctx)
	log.Println("meetups created:", m)

	// query edges.
	u0, err = m.QueryUser().First(ctx)
	if err != nil {
		log.Fatalf("failed querying user: %v", err)
	}
	log.Println("user found:", u0)

	// Output:
}
func ExampleUsers() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the users's edges.

	// create users vertex with its edges.
	u := client.Users.
		Create().
		SetUsername("string").
		SetEmail("string").
		SaveX(ctx)
	log.Println("users created:", u)

	// query edges.

	// Output:
}
